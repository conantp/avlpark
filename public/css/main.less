.linear-gradient( @dir: top, @start-color: #eee, @end-color: #aaa ) {
	background: -webkit-linear-gradient(@dir, @start-color 0%, @end-color 100%);
	background: -moz-linear-gradient(@dir, @start-color 0%, @end-color 100%);
	background: -ms-linear-gradient(@dir, @start-color 0%, @end-color 100%);
	background: -o-linear-gradient(@dir, @start-color 0%, @end-color 100%);
	background: linear-gradient(@dir, @start-color 0%, @end-color 100%);
	.linear-gradient-ie( @dir, @start-color, @end-color);
}

.linear-gradient-ie( @dir, @start-color, @end-color) when (@dir = top), 
	not ( isstring(@dir) ) and ( @dir >= 225 ) and ( @dir < 315 ), 
	not ( isstring(@dir) ) and ( @dir >= -135 ) and ( @dir < -45 ) {
		.linear-gradient-ie-filter(@start-color, @end-color, 0);
}
.linear-gradient-ie( @dir, @start-color, @end-color) when (@dir = right), 
	not ( isstring(@dir) ) and ( @dir >= 135 ) and ( @dir < 225 ), 
	not ( isstring(@dir) ) and ( @dir >= -225 ) and ( @dir < -135 ) {
		.linear-gradient-ie-filter(@end-color, @start-color, 1);
}
.linear-gradient-ie( @dir, @start-color, @end-color) when (@dir = bottom), 
	not ( isstring(@dir) ) and ( @dir >= 45 ) and ( @dir < 135 ), 
	not ( isstring(@dir) ) and ( @dir >= -315 ) and ( @dir < -225 ) {
		.linear-gradient-ie-filter(@end-color, @start-color, 0);
}
.linear-gradient-ie( @dir, @start-color, @end-color) when (@dir = left), 
	not ( isstring(@dir) ) and ( @dir >= 315 ) and ( @dir < 360 ), 
	not ( isstring(@dir) ) and ( @dir >= -45 ) and ( @dir < 45 ), 
	not ( isstring(@dir) ) and ( @dir < -315 ) and ( @dir >= -360 ) {
		.linear-gradient-ie-filter(@start-color, @end-color, 1);
}

.linear-gradient-ie-filter(@start: #eee, @end: #aaa, @type: 1) {
	@c-start: argb(@start);
	@c-end:   argb(@end);
	filter: ~"progid:DXImageTransform.Microsoft.gradient(startColorstr='@{c-start}', endColorstr='@{c-end}', GradientType=@{type})";
	-ms-filter: ~"progid:DXImageTransform.Microsoft.gradient(startColorstr='@{c-start}',endColorstr='@{c-end}',GradientType=@{type})";
}

body{
	font-family: "Helvetica Neue";
	margin: 0;
	padding: 0;
	background: rgba(0,0,0,0.8);
		text-shadow: 1px 1px 5px rgba(0,0,0,0.8);
		color: white;
}

ul, li{
	margin: 0;
	padding: 0;
	list-style: none;
}

h1,h2{
	margin: 0;
	padding: 0;
}


h1{
	text-align: center;
	background: white;
	color: black;
	text-shadow: none;
	border-bottom: 3px solid green;

}

h2{
	padding: 10px;
}

#container{
	text-align: center;
	margin: 0 auto;
	box-sizing: border-box;
}

.year-list li{
	display: inline-block;
	width: 33%;
}

#parking-deck-list{
	display: none;
	padding: 0 20px;
}

#parking-deck-list h2{
	font-size: 2.0em;
	font-variant: "light";
}
.deck-green{
	.linear-gradient(180deg, fade(lighten(green, 50%), 90%), fade(lighten(green, 20%), 80%) );
}

.deck-red{
	.linear-gradient(180deg, lighten(red, 20%), red);

}

.deck-orange{
	.linear-gradient(180deg, fade(lighten(yellow, 20%), 90%), fade(lighten(orange, 0%), 80%) );
}

.deck-black{
	.linear-gradient(180deg, fade(#666, 80%), fade(black, 80%) );
}

#parking-deck-list > li{
	margin: 20px 0;
	padding: 10px;
	border-radius: 10px;
	.deck-orange;

	box-shadow: 1px -1px 10px rgba(0,0,0,0.5);
}

#parking-deck-list > li:first-child{
	.deck-green;
}

#parking-deck-list > li:last-child{
	.deck-red;
}

.year-list{
	border-radius: 10px;
	.deck-black;
	height: 100px;
	overflow: scroll;

}

#parking-deck-list li{
	color: white;
}